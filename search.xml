<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[黑暗之魂受死版繁体中文文本校正补丁]]></title>
      <url>%2F2016%2F10%2F17%2Fdarksouls-revised-text%2F</url>
      <content type="text"><![CDATA[简介首先黑魂标点符号参差不齐显示效果比较糟心，然后又到处加多余的逗号句号，于是我就做了这个补丁解决这些问题。 具体改动 改动的内容 改动后 省略号…… 缩小为… 会话中的逗号句号 半角空格 其它文本行末的逗号句号 删除（包含另外两个版本，一个是不做处理，一个是全部文本中的逗号句号都替换成空格） 各种斜杠╱／/ 统一用 / 各种加号＋+ 统一用 + 全角ＨＰ 半角 HP 希芙 希夫 PRESS START BUTTON 按下 START 鍵 NEW GAME 開始遊戲 LOAD GAME 繼續遊戲 篝火传送地点底部几个地名前的空格 删除 出血、中毒等提示最前面的感叹号 删除 预览 改动前 改动后 下载包含三个版本，分别为是否删除行末逗号句号和替换全文逗号句号为空格，请根据自己的喜好使用。建议和黑暗之魂繁体中文文字高清 MOD 搭配，效果更佳。 链接: https://pan.baidu.com/s/1nvyFGyl 密码: urwf 使用说明 打开游戏 exe 文件所在目录，备份 dvdbnd3.bdt 和 dvdbnd3.bhd5 文件，以备出现问题还原 选择自己喜欢的修改版本覆盖源文件 打开游戏受苦 如何自己制作补丁工具 Alexandria 用来查看黑魂的资源文件（非必须） BND File Rebuilder 用来解包打包黑魂的资源文件 darksouls2_texttool 用来将包含文本内容的 fmg 文件与 txt 文件互转 步骤 用 BND File Rebuilder 解包 dvdbnd3.bhd5 文件得到 dvdbnd3.bhd5.extract 目录 进入 dvdbnd3.bhd5.extract\msg\TCHINESE 目录，继续用 BND File Rebuilder 解包 item.msgbnd.dcx 和 menu.msgbnd.dcx 得到 item.msgbnd 和 menu.msgbnd 还是用 BND File Rebuilder 解包 item.msgbnd 和 menu.msgbnd 得到 item.msgbnd.extract 和 menu.msgbnd.extract 目录 运行 darksouls2_export.exe 工具，选择 dvdbnd3.bhd5.extract\msg\TCHINESE 目录得到 TCHINESE.txt 文件 修改 TCHINESE.txt 文件，注意中文得用繁体而且不能增删行数 运行 darksouls2_import.exe 先选择 TCHINESE.txt 文件，接着选择 dvdbnd3.bhd5.extract\msg\TCHINESE 用于将修改的文本打包回去 反过来来操作 1、2、3 步，使用 BND File Rebuilder 按照顺序分别选择 item.msgbnd、menu.msgbnd、item.msgbnd.dcx、menu.msgbnd.dcx、dvdbnd3.bhd5 进行打包 完成]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[黑暗之魂受死版繁体中文文字高清 MOD]]></title>
      <url>%2F2016%2F10%2F17%2Fdarksouls-hd-text%2F</url>
      <content type="text"><![CDATA[简介最近在 @莫伊图拉‍ 的安利下开始了魂一的受苦之旅并借助 DSfix 打上了一系列的 MOD，其中有个很受欢迎的界面文字与会话对白高清 MOD 能够很好的提升玩家的游戏体验，不过该 MOD 对繁体中文的支持不太好，只有界面文字得到了调整并且许多文字有污点（位图字体没对准所致）。在打完小隆德四天王后我的忍耐达到了极限（你这不怎么看道具说明和对白的人有什么要忍耐的←_←），遂对位图字体进行重绘做出了此 MOD。 预览界面文字对比 改动前 改动后 界面文字对比 会话文字对比 下载包含 GitHub 新版 DSfix（增加预加载纹理材质文件的功能以及修复自动备份功能）和 MOD 本体链接: https://pan.baidu.com/s/1nvyFGyl 密码: urwf 使用说明 解压所有文件到 DARKSOULS.exe 所在的目录 打开 DSfix.ini 并将以下两个参数修改为你游戏中的分辨率 renderWidth 3840renderHeight 2160 打开游戏进入设置界面关闭抗锯齿，不然加载存档时游戏会报错 开始受苦 根据我制作 MOD 时的瞌睡程度有可能出现错字、污点、缺字等等问题，反馈时麻烦告知是界面字体还是会话字体并且出现在何处，感谢配合。 制作历程首先 DSfix 提供了导出纹理材质文件的功能，从中找出需要修改的位图字体文件。字体文件分成界面字体和会话字体两类，这两类字体我在重绘时分别选择了新细明体和标楷体两种与原来十分相似的字体，并且将界面字体中出现的日文异体字替换成正常的字形（如原字体中的道字走之底是两点，因为日文与繁体中文使用的是同一套字体），而会话字体我在参照原字体进行描边处理后发现在游戏中缩放后会有白色的斑点，所以最终我取消了描边。 找到字体文件后下一步就是将图片中的文本提取出来，借助在线 OCR 服务或者 OCR 软件还有直接从 Unicode 编码表中复制等手段可以完成该工作。 最后则是用 Photoshop 将原字体图片放大 4 倍，然后把准备好的文本铺上去调整每个文字的位置使其和原图一致，大功告成！（总共三十几张图，很惭愧，就做了一点微小的工作） MOD 与插件推荐下面是我在用的一些 MOD 和插件，个人感觉可以提高游戏体验并且不会造成游戏卡顿，请根据个人喜好下载安装： 游戏场景高清材质包 SweetFX HDR 游戏画面效果增强插件，与上一个 MOD 是同一个作者建议配套使用，我比较喜欢其中的 Natural and Soft 风格效果。游戏中可按 Scroll Lock 键开启 / 关闭效果 魂三界面 MOD，使用中文语言进行游戏的话需要将 40fbc4ad.dds 文件改名为 8fdc74b1.dds 不然手柄按钮高清图将不起作用 联机增强插件 提高连接上其他玩家的几率与个数，并且可以方便与特定玩家联机（后者我还没尝试过） 开始界面的 Logo 动画，篝火加配乐十分融洽 取用网上的 GIF 动画制作了 Artorias 和 Nito 的 Loding 动画以及原动画去污点版（与字体 MOD 同一下载地址） 自制的繁体中文文本校正补丁，调整了标点符号和修复一些明显的错误]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Genymotion 安装记 —— 最快的 Android 模拟器]]></title>
      <url>%2F2015%2F12%2F15%2Fgenymotion-bug%2F</url>
      <content type="text"><![CDATA[Genymotion —— 最快的 Android 模拟器，简单，实用，高效。 下载注册之后才能之后才能下载，根据是否集成 VirtualBox 有两种版本可供选择。 安装 一路 Next 即可。如果是集成了 VirtualBox 的版本，安装过程中会弹出 VirtualBox 的安装界面 推荐在 IDE 里安装相应的 Genymotion 插件以便直接打开模拟器，具体安装说明请看下载页面 使用运行 Genymotion 后先登陆，然后添加下载需要使用的镜像，接着点击 Start 运行模拟器就 OK 了。OK 个大头鬼，接着我就遇到了点问题： 运行后弹错误提示 balabala 的，然后我打开 VirtualBox 查看详细信息，具体错误信息没有记录下来。Google 一发后没有找到解决方案，我就将 VirtualBox 从 5.0.4 升级到 5.0.10。 可惜还是不能运行，不过错误信息变成了 Unable to load R3 module，从网络中找到了解决方案，大意是因为破解了 uxtheme.dll 文件所以出错了云云，借用工具将其还原即可 今天开机又出现刚一开始的错误了： The virtual machine 'Custom Phone - 4.1.1 - API 16 - 768x1280' has terminated unexpectedly during startup with exit code -1073741819 (0xc0000005).返回代码: E_FAIL (0x80004005)组件: MachineWrap界面: IMachine &#123;f30138d4-e5ea-4b3a-8858-a059de4c93fd&#125; 经过搜索发现是 Mactype 的锅，也就表明一开始升级 VirtualBox 并不能解决问题，正确的姿势应该是将 VirtualBox 的相关进程从 Mactype 中排除，将以下内容添加到配置文件中： [UnloadDll]VBoxSVC.exeVirtualBox.exe 更新记录 2015 年 12 月 15 日 - 发布 2015 年 12 月 16 日 - 添加 Mactype 导致的错误描述以及解决方案]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[曾经造过的轮子——《以撒的结合》Roll 不崩插件]]></title>
      <url>%2F2015%2F12%2F04%2Fbinding-of-isaac-plugin%2F</url>
      <content type="text"><![CDATA[以撒的结合 SpiderMod 版本插件，用于修复刷新道具时游戏崩溃以及道具池相关问题 SpiderMod 官网：http://spidermod.spiderland.net/ Roll 崩 Bug关于游戏会被 Roll 崩这个 Bug，首先我们来简单的了解一下以撒这个游戏中道具的刷新机制。 不同的房间有不同的道具列表，所以我们能在不同的房间刷出各种类别的道具，游戏崩溃这个 Bug 出现在普通房间 / 宝物房道具列表中 在普通房间 / 宝物房生成道具或刷新道具时会从道具列表中随机抽取一个出来 验证这个道具是否曾经捡过，如果没捡过继续第 4 步，否则跳到第 5 步 把这个道具从道具列表里删除 假如道具列表剩余道具数小于等于 5 个，恢复道具列表（满满的道具，相当于刚开始游戏时的状态） 假如第 3 步的道具没捡过的话就生成或刷新出这个道具，否则跳回第 2 步这个 Bug 的关键是当道具列表恢复过一次以后，我们曾经捡过的道具也在里面，那么第 3 步这些道具就会被跳过不会从道具列表里删除，而假如我们捡过的道具超过 5 个，这时就会与第 6 步组成无限循环，于是就卡死了。 这样修复这个 Bug 的关键是，曾经捡过的道具必须从道具列表里删除。我们只需要在第 3 步检查到曾经捡过的道具时，将其从道具列表中删除即可。当然实际代码中有许多细节需要兼顾，这里就不赘述了。 另外还修复了两个 Bug Boss 房 / 普通隐藏房 / Boss 挑战房有可能会出现未定义道具（不吃这些房间的任何道具，用 SpiderMod 进这些房间后狂按 F6 就能看到这个 Bug 了） 商店道具列表最后一个道具永远不会出现的问题（同样用 SpiderMod 进商店狂按 F6，然后菜单 - 内置 - 道具列表中可以查看还剩一个道具在里面，如果是修女服就哭吧） 使用说明下载解压到 SpiderMod 的 Plugins 目录中，启动 SpiderMod，菜单 - 插件 - 启用，重启 SpiderMod，菜单 - 插件 - 设置，在想启用的插件前打上勾，重新启用 SpiderMod 即可。记得同时启用 PhD Bug 修复插件，这样才能确保游戏不会像陆夫人那样崩掉。 下载地址插件: https://github.com/DemoJameson/bindingOfIsaacPlugin/archive/master.zip本人汉化的 SpiderMod + 插件: http://pan.baidu.com/s/1qYAgiba 密码:pfgq]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[随机莫名无法输入中文的问题 “IME 已停用” 治标法]]></title>
      <url>%2F2015%2F12%2F02%2Fwindows-ime-stop%2F</url>
      <content type="text"><![CDATA[升级到 Win 10 后才遇到的问题，上网一搜发现 Win 8 时已经有同病相怜的人了，可是直到如今依然没法解决 -_- 问题描述时不时，通常是倒杯水坐下后就发现打不了中文了。屏幕右下角还十分好意的打着一个叉叉提醒人“IME 已停用”。那我回来了你是不是应该正常工作了呢，Windows 大爷，可是无论怎么捣鼓他就不是不给你打中文。 治标之法所以说网络搜索引擎是多么伟大的发明，上网搜索后还是有那么两招能够缓解一下这个问题产生的蛋疼： Win + X 打开 “计算机管理” 来跟着我点开系统工具 - 任务计划程序 - 任务计划程序库 - Microsoft - Windows - TextServiceFramework 看到右边那 MsCtfMonitor 的字样没，对就是他，右键狠狠的点，然后运行 Windows 大爷终于又肯让你输入中文了 补充：如果第 2 步你就已经进行不下去了，可能是 Windows 大爷发功把 Task Scheduler 关了，请在 “计算机管理” 界面找到 “Task Scheduler” 这个服务并运行之再继续第 2 步]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[搭建使用 Hexo 的些许经验]]></title>
      <url>%2F2015%2F11%2F26%2Fabout-hexo%2F</url>
      <content type="text"><![CDATA[Hexo 的搭建的确挺方便的，然而使用过程中却是遇到了不少问题，这里就权当记录了。 解决 GitHub Pages 的 302 转向问题之前使用的是根域名 demojameson.com，设置 Swiftype 后发现一直无法抓取到内容。添加 sitemap.xml 添加 robot.txt 等办法通通无效后，几经搜索才发现是 302 问题。所以还是老老实实按照 GitHub 的建议使用二级域名了。 文章中的 title 注意转义写 [译] 为什么 Kotlin 是我下一门要使用的语言这篇文章时发现 title 添加 [] 符号后就无法 Generate 了。因为开头这部分被称为 Front-matter，使用 YAML 格式记录文章的数据，某些符号需要转义时使用单引号框住即可正常工作。 同时兼顾本地编辑时图片的预览以及网页的正常显示Markdown 中引用网络上绝对地址的图片即可，可使用七牛云存储当图床。 不过最终我还是选择了直接将文章中的图片上传到 GitHub 中（本地编辑无法预览图片），如果文章中图片使用的是相对路径需要进行一些变动 百度无法抓取 GitHub Pages 内容的问题GitHub 禁止了百度的爬虫，解决方法挺多，一箭双雕的方案是同时部署到 GitHub 以及 GitCafe，通过 DNSPod 将国内线路解析到 GitCafe。然并卵，百度可以抓取到 sitemap，抓取诊断也没有问题，但是索引量依旧是零，哈哈哈哈~ # _config.yml 文件同时部署到 GitHub 与 GitCafe 的配置deploy: type: git message: [message] repo: github: &lt;repository url&gt;,[branch] gitcafe: &lt;repository url&gt;,[branch] 从根域名自动跳转到 www 子域名GitHub 会帮你自动跳转，但是 GitCafe 需要自己到域名解析服务商设置，可用 DNSPod 的显性转发功能（域名托管 30 天后才可使用该功能） 插件推荐 hexo-browsersync 本地调试时修改文章后可在浏览器马上看到效果 hexo-deployer-git 配置好后可以很方便的更新文章到 GitHub Pages hexo-generator-sitemap 在网站根目录生成 sitemap.xml 方便搜索引擎抓取 更新历史 2015 年 11 月 26 日 - 初稿 2015 年 11 月 28 日 - 添加百度无法抓取 GitHub Pages 内容的问题、从根域名自动跳转到 www 子域名 2015 年 11 月 29 日 - 百度索引量依旧是零]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[[译] 为什么 Kotlin 是我下一门要使用的语言]]></title>
      <url>%2F2015%2F11%2F08%2Fwhy-kotlin%2F</url>
      <content type="text"><![CDATA[作者 原文 Mike Hearn Why Kotlin is my next programming language Kotlin 是一门新的编程语言，它来自 JetBrains —— 世界上最伟大 IDE 的开发商。在做了许多研究后，我决定将 Kotlin 作为我未来 5 到 10 年的主力编程开发语言。 我十分喜爱 Kotlin，它将会是一个很成功的项目。人们看到我在开源项目中使用了该语言后让我介绍一下它，所以在本文中我将说明为什么 Kotlin 是优秀的，讨论一些使用中可能会遇到的问题， 注意：Kotlin 目前处于 beta 阶段，有望于 2015 年底发布 1.0 正式版并且提供稳定的标准库。 为什么说 Kotlin 是优秀的本文不会像一般介绍语言的文章那样，一开头就罗列出语言那些酷炫的特性，我们稍后再来探讨这些内容。 首先我将介绍一些其它的信息，因为 2013 年一项研究显示，当开发者评估一种编程语言时生态系统要比语言特性更重要。这符合我个人的经验，下面就让我开始介绍吧： Kotlin 被编译成 JVM 字节码或者 JavaScript 代码。Java 开发者将会是对它最感兴趣的人，不过对于使用垃圾收集运行时语言的开发者而言它也具有一定的吸引力，比如 Scala、Go、Python、Ruby 和 JavaScript 等语言。 Kotlin 来自业界，而不是学术界。它解决了开发者现今面临的实际问题。例如它的类型系统可以帮助你避免空指针异常。 切换到 Kotlin 无需成本！ 它是开源的但这不是重点，重点是它提供了一个高质量的一键从 Java 转换到 Kotlin 的工具，并且十分关注 Java 二进制文件的兼容性。你可以将现有 Java 项目的一次性转换成 Kotlin 项目，而该项目仍将可以正常编译，即使这是一个包含上百万行代码的复杂程序。 显然你可以从上文得知，Kotlin 程序能够使用所有现存的 Java 框架和库，甚至那些依赖注解处理的高级框架。它们之间的交互是无缝的，不需要包装或者适配层。Kotlin 可以整合 Maven，Gradle 以及其它构建系统。 它十分平易近人，语法精炼直观，仅仅是阅读语言参考文档几个小时就能学会使用。Kotlin 看起来十分像 Scala 但是更加简洁并且兼顾了可读性。 它不遵循特定的编程哲学，例如极度的函数式编程或者面向对象编程风格。 它不会增加运行时的开销。Kotlin 的标准库十分小巧紧凑：专注于扩展 Java 标准库，编译阶段的大量内联操作意味像 map/filter/reduce 等管道结构函数将被编译成类似于命令式语言的代码。 Anko 与 Kovenant 等框架的出现意味着在 Android 开发者中 Kotlin 开始变得流行起来。如果你正在从事 Android 相关的工作，相信你很快就会获得好的工作。你可以阅读这份 Square 公司开发者 JakeWharton 的报告，了解用 Kotlin 进行 Android 开发的体验。 Kotlin 允许你继续使用你的工作效率提升工具。IntelliJ 的 IDE 对 Kotlin 的支持十分完善：你可以对代码进行重构、搜索、导航以及使用自动完成，而且 IDE 充分支持调试、单元测试、性能分析等等功能。 除了 Android，我认为 Kotlin 还非常适用于企业中 Java 的应用场景 。如果你的工作是整天埋头于大公司的代码库中，那么当 Kotlin 1.0 版本正式发布时你应该尽快去了解一下： 由知名公司为它提供强大的商业支持。 JetBrains 这家公司 有一个高度称职的大团队致力于该项目，有稳定的商业模式甚至在自己的部分旗舰产品中使用 Kotlin，这表明短期内 Kotlin 不会被放弃。 使用 Kotlin 风险较低：可以由一两个感兴趣的团队成员在项目中小范围的试验 Kotlin，这并不会扰乱你的项目，因为 Kotlin 的类对外提供的 Java API 看起来就与普通的 Java 代码一样。 因为 Kotlin 十分注重语法的可读性，代码审查不会成为问题，对 Kotlin 不熟悉的团队成员仍然能够完成该工作。 Kotlin 基于 Java 6，所以假如你难以在项目中升级使用新版本的 JVM，你可以使用 Kotlin。 今年早些时候我向 Swiss Re 这家瑞士再保险公司的团队（他们使用 Java 和 .NET）展示了 Kotlin。首先我定义了一个简单的 Java 类包含一些字段以及 toString、equals、hashCode 等方法，大概有 50 行代码。然后我将它转换成 Kotlin 代码（大部分是自动完成的），结果仅剩 1 行代码，接着我还演示了其它节省时间的特性。他们看过后对 Kotlin 充满了热情并且认为 Kotlin 是它们项目中 C# 语言的一个潜在竞争对手。 我认为 Kotlin 正中企业 Java 开发者的红心，所以尽管 Kotlin 是免费的，JetBrains 还是能够通过它增加商业版本 IDE 的销售来赚大钱。这将激励他们根据用户的意愿持续改进它。 与此相比，对于那些由不相关产品资助的语言开发者来说，当用户需求与之前的设计理念冲突时，他们很少会因此作出调整。 特性Kotlin 作为一门新的编程语言能够脱颖而出，是因为它关注生态系统：JetBrains 懂得生产力的高低更多的取决于生态系统而不是便捷的语法。 尽快如此，Kotlin 还是有许多有用的特性能让你编码的过程变得愉快： 我们已经提过 null 安全（可选），它能够让编译器系统的标记潜在的空指针引用。与一些语言不同的是它不涉及 option 类，因此是零开销的，并且还有其它语言特性确保它不会造成不便。 精炼的语法：无处不在的类型推断、简单的函数只需要一行、简单的结构以及 JavaBeans 也只需要一行就能声明、真正的属性——可以在背后自动生成 getFoo/setFoo 方法用于与 Java 进行交互、函数可以独立存在于类之外。 异常均为非检查型。（译者注：感兴趣的可以阅读一下 Java 理论与实践: 关于异常的争论） 使用 data class 关键字创建数据类会自动生成通用方法，例如 equals、hashCode、toString 以及 copy 和 componentN（同时声明多个变量时会调用该方法）。这将帮助你在不使用构建器的情况下便捷的获得不变类（immutable classes）。 但如果你需要构造复杂的结构体，借助类型安全的构建器这个特性可以简洁的实现。如果你使用 Google Protocol Buffers 来存储结构化数据， 通过 KBuilders 这个库也能很轻易做到。 支持函数式编程以及零开销的 lambda 表达式，能够在 Java 的集合中做 Map、Filter、Folder 等处理。Kotlin 的类型系统能够自动识别可变或者不可变的集合。 扩展函数特性能够让你在不改动源码的情况下为类添加方法。乍眼一看以为是为了避免写出像 FooUtils 这种风格工具类的语法糖，不过随着使用的加深，你会认识到它不仅能帮你更加容易的通过自动完成使用方法，还能协助你集成现有的 Java API 以及借助其它 Kotlin 特性构建功能强大的扩展。 支持运算符重载，但是不会像 Scala 或者 Perl 那样出现难以理解的代码。运算符被映射成相应名字的方法，通过重写这些方法改变运算符的行为（包括函数调用），但是不能定义新的运算符。这使得程序能够兼顾功能与可读性。 Kotlin 没有宏或者其它的方式来重定义语言，但是通过这些精心设计的特性能够使第三方库自由的对它进行扩展，官方对集合类进行的扩展也只是小试牛刀而已，请看以下例子。 想使用 fibers、actors 和 Go 风格的 channels？一个名为 Quasar 的库已经为你实现了。 使用 Markdown 替代 HTML 来编写 API 文档，这样编写 JavaDocs 可比以前舒适多了。（译者注：JetBrains 提供了相应的文档生成器 Dokka） 更好用的泛型。如果你没有完全掌握泛型参数中 super 以及 extends 的含义，别担心，这不是你的错。Java 的泛型的确令人费解，Kotlin 解决了这个问题。 委托是一个大家都知道的设计模式，Kotlin 原生支持它。 == 运算符 的行为符合预期（译者注：简单来说 a == b 相当于 a.equals(b)；新增了 === 运算符，用来判断运算符两边是否指向同一个对象） 想快速便捷的进行异步编程吗？当然！ 字符串插值 “可以使用这样的写法在字符创中直接引用变量{this.example}” 函数中的参数可以指定默认值、使用可变长度以及通过参数名传参。 还有许多的调整与优化。假如 Java 中有某些让你觉得困扰的问题，我相信 Kotlin 一定已经把它处理好了。 现在就来试用一下！跟很多现代编程语言一样，Kotlin 可以通过网页浏览器来进行体验。不过跟其他语言不一样的是，Kotlin 的实验网站提供了一个成熟的 IDE，包括响应很快的自动完成，实时的后台编译，甚至还有在线的静态分析！ 在线试用一下吧好了，让我们继续接下来的内容 目前存在哪些问题？生活中没有什么是完美的，包括 Kotlin。以下是我尝试这门语言时遇到的一些问题。 最大的问题是不够成熟，因为 Kotlin 目前还处于 Beta 阶段，这意味着： 每更新一个版本，语法、ABI 以及标准库就变一次。好消息是这些变化通常比较微小，可以借助 IntelliJ IDE 来自动升级你的代码，所以这个过程并不会太麻烦。 Java-to-Kotlin 的转换工具（J2K）还没有完成。它偶尔会大规模的破坏和默默地擦除 Java 8 中的 Lambdas（修改：2015 年 10 月：M13 版本的转换工具已经可以正确地处理 Java 8 的特性了）。由它转换而成的代码并不总是最好的写法，但是 JetBrains 为这个工具付出了大量努力，它已经是我用过的语言转换工具中最好的了。所以我并不太担心这个问题，这个转换器正在迅速的改进中，变得越来越成熟。 你会遇到编译器错误。尽管我的程序并不大，但还是会发生无法编译的情况，甚至错误的编译结果。诊断这些问题并不难，但终归还是影响了开发的体验。 你会遇到 IDE 内部错误。当这个错误发生时，IntelliJ IDE 会弹出一个悬浮窗口，附带向 JetBrains 报告的选项。大部分错误无需理会，不过依然会使人厌烦。 偶尔会出现无法加载提示文档的错误（修改：M14 版本发布后，这个问题已被修复） 目前 JetBrains 正致力于完善发布 1.0 版本而不是添加新的功能，期待这些问题能够得到修复。 第二个我遇到的比较大的问题是，有时与 Java 的交互会受到局限。 一个典型的 Bug 是 Java 的类型系统无法防止你改变 Map 中 Key 的类型。按理来说，这样操作应该导致编译器报错，例如使用类型错误的 Key 删除元素。有些 JDK 中的集合使用了泛型，它们某些重要方法的泛型参数是 Obejct，所以编译器不会提示。当在 IntelliJ IDE 中编写 Java 代码时会有静态分析的警告，但是目前 Kotlin 环境还没有这个功能。因为 Kotlin 使用的是 Java 的集合框架没有自己实现，所以这导致了一些类型安全方面的问题，我已经遇到好几次了。（修改：1.0 Beta 版本中这个问题已经解决了，Java 中集合框架的类型安全缺陷在 Kotlin 已经不复存在。哟呵！） 另一个例子是，当调用或使用 Java 代码时 Kotlin 的 Null 安全特性无法发挥作用（可以借助注解弥补）。作为 Kotlin 的初学者，刚开始你可能会写许多调用 Java 库的代码，但是因为以上的问题它们并没有你想象中那么好用。这种情况的改善只能等待 Kotlin 使用人数的增长。JetBrains 一直在尝试使 Null 安全特性能体现在 Java 交互中，这种想法是好的，但有时考虑并太周全。（修改: 从 M13 版本开始，在 Java 代码中将自动以 @NotNull @Nullable 等注解实现 Kotlin 的 Null 安全特性） 虽然有以上的问题存在，但同时也使得我们能更流畅的使用 Java API，我觉得这种权衡是值得的，只是在开发中要注意。 其它需要考虑的问题: Kotlin 的社区还比较小。虽然目前没有多少 Kotlin 的库可以使用，但是凭借优秀的 Java 交互能力，Kotlin 可以使用现有成熟的 Java 库。 如果你喜欢看书来学习，那么你需要等到今年晚些时候才能看到 Kotlin 开发者写的书（译者注：Kotlin in Action） 纯粹的函数编程风格开发者可能会觉得类型系统中缺乏一些 Scala 或 Haskell 拥有的高级功能。如果你对类型系统一些功能比较看重，那么 Kotlin 可能不适合你。 Kotlin 还能编译成 Javascript 代码，但是比较少用，所以可能会遇到更多的问题，这是我从论坛中得到的印象。（修改: 目前 Kotlin 的开发重心在于完成 1.0 版本并使其稳定运行在 JVM 中，Javascript 方面的问题将会在 1.0 发布后着手解决） 没有标准的编程风格指南，目前 Kotlin 提供了多种语法可供选择。不同人写出来的 Kotlin 代码很可能完全不一样。这与 Go 严格的风格形成了鲜明的对比。（修改: Kotlin 1.0 版本开始，一些灵活的语法已经被移除了，例如现在重载运算符以及定义中缀函数时必须分别使用 operator 和 infix 关键字进行标记） Kotlin 的编译速度稍稍慢于 Java，以及 IntelliJ IDE 的智能提示反应有点缓慢，不算严重而且比 Scala 快多了。（修改：Kotlin 1.0 开始编译速度有了明显提升） Kotlin 有一个 Eclipse 插件，但是很明显没有 IntelliJ 的好用。 Kotlin 在某些方面比 Java 要严格。它不会自动将 Int 转换为 Long 类型，需要开发者显示的转换。这是因为 Kotlin 关注正确性和试图解决《Java Puzzlers》一书中提出的问题。JetBrains 声称他们已经搞定一半了。 Kotlin 基于 Java 6，因此会受到它的局限。Kotlin 与 C# 在很多领域都很相似甚至比 C# 做得更好，但是它缺少一些功能，例如 Java 平台尚未支持的值类型。 为什么应该开始考虑使用 JVM最近一段时间我遇到了很多使用动态脚本语言（JavaScript 或者 Go —— 译者注：Go 应该是静态编译型语言）的创业公司。我在 Bitcoin Space 工作的时候，使用动态语言是非常痛苦的事情。在这些语言里没有安全性的类型，这已经导致了巨大的货币损失。Go 比较少出错，但是在基础层面上给人的体验依然很差，比如说缺少好的调试工具，快速 GC 机制，稳健的管理器以及可靠的分析工具。过去 15 年或者更长时间里，Java 变得越来越健壮，越来越冗长，甚至有过度设计的迹象，这些变化很大程度上源于它的声誉。企业级 Java 类的名字 PathVariableMapMethodArgumentResolver 就是例证。在很长一段时间里我没有考虑 JVM，我确信这种环境并不适合我。 最终我因为 Android 被迫回到 Java，发现 Java 的开发环境已经改变了。虽然 XML 仍然不合时宜的频繁出现在各种场合，但是一些基础功能十分完善，令人印象深刻。 IntelliJ 是比 Eclipse 更快并且更智能的 IDE。Maven 一出现就得到了迅速的发展，拥有许多原本我想要其它构建/依赖系统增加的功能。较新的 Web 框架像 Ninja 和 Play 从类似 Ruby on Rails 的框架中学到了轻量简洁。有大量的库可供使用。硬件性能变得更高以及 JVM 变得更有效率，等等转变。 没有真正改变的是语言本身，Java 代码写起来依然是令人不快的冗长。 现在有了 Kotlin，完全无需承受离开 Java 现有的生态系统的疼苦。你可以编写更富有表现力的代码，但是却比脚本语言更简洁，同时拥有更好的性能和更少的错误。 如果你喜欢 JavaScript，可以尝试 Kotlin 的 JS 后端，或者在 Nashorn JS 引擎里运行你现有的代码。 最后，如果你喜欢 Go 语言是因为它可以编译独立运行的程序，那么试试 javapackager 工具。Kotlin 在本地为每个平台创建了捆绑包，这意味着在 linux 上不需要 JRE 的依赖就可以独立自主的获取 DEBs（linux 的安装包）或者压缩包。当然，它拆包之后不是单个文件而是单个目录，从部署的角度来看并不难操作。 简而言之：如果你之前因为看 Java 不顺眼而忽略了 JVM 的生态系统，那么你应该借着 Kotlin 这门新语言进入这个世界瞧瞧。 译文更新历史 2015 年 11 月 08 日 - 初稿 2015 年 12 月 11 日 - 将段落 “目前存在哪些问题” 末尾的 value types 翻译改为“值类型”]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[在 OpenShift 上免费搭建 Ghost 博客的过程]]></title>
      <url>%2F2015%2F08%2F09%2Fpublish-ghost-blog%2F</url>
      <content type="text"><![CDATA[Ghost 简介 Ghost 是一个基于 Node.js 的开源博客平台，由前 WordPress UI 部门主管 John O’Nolan 和 WordPress 开发人员 Hannah Wolfe 创立，目的是为了给用户提供一种更加纯粹的内容写作发布平台。 Ghost 简单轻量部署快，后台使用具备预览功能的 Markdown 编辑器进行写作，这些就是我选择它的原因。（下面提及的 Bug 还没修复，所以现在改用 Hexo 了 —— Ghost 博客一览请点击 搭建过程主要参考了《使用 Nitrous.IO+OpenShift 免费搭建 Ghost 博客》这篇文章，下面就将搭建的过程简单的记录一下，说说遇到的坑以及解决方法。 注册 OpenShift使用其提供的免费服务搭建 Ghost Blog。 注册 nitrous.io，该服务提供了一个在线的 Linux 开发环境，稍后需要使用这个环境安装 Ghost 和配置。注册后创建 Node.js IDE 时需要通过手机短信进行验证，经测试中国移动的号码无法使用免费的方案，遂借用 Heywire 这个手机应用（获得虚拟的美国号码，免费接收短信）完成了验证。 使用 nitrous.io 的 Node.js IDE 环境搭建 Ghost Blog： 安装 rhc 工具（OpenShift 的客户端工具）：sudo gem install rhc 初始化 rhc 工具：rhc setup（按照提示输入用户名密码） 安装 Ghost Blog：rhc app create ghost nodejs-0.10 mysql-5.1 --env NODE_ENV=production --from-code https://github.com/openshift-quickstart/openshift-ghost-quickstart.git（该语句中的 ghost 以及下文 rhc 命令中的 ghost 同为 OpenShift 中的应用名，可自行更改为其它内容） 这时已经可以通过http://ghost-用户名.rhcloud.com连接访问 Ghost Blog 了，但是由于众所周知的原因 OpenShift 很可能被墙了，这时候就得通过自定义域名来绕过围墙： 在 OpenShift 中自定义域名：rhc alias add ghost [你自己的域名] 在 DNS 服务商处，将对应域名的 CNAME 记录指向 ghost-用户名.rhcloud.com 在 nitrous 中打开 ghost/config.js 文件，将 &#39;http://&#39;+process.env.OPENSHIFT_APP_DNS 替换为 &#39;http://[你的域名]&#39; 使用 CDN 加速访问（非必须）： 不知为何无法使用 Incapsula 服务，获取不到我的 IP，所以选择了 Cloudflare。 经测试国内访问Cloudflare速度也不够快，考虑备案然后使用国内的 CDN 服务。 也是因为众所周知的原因，需要替换 Google Font 使用 360 CDN 提供的字体库，打开 ghost/content/themes/[主题]/default.hbs 文件，搜索fonts.googleapis.com全部替换为fonts.useso.com 参考《解决 Ghost 中 gravatar 被墙不能显示的问题》，数据库相关信息可在 OpenShift 中找到： mysql -u [数据库用户名] -p -D [数据库名称] Enter password:[数据库密码] select image from users where email = &quot;your email address&quot;; update users set image = &quot;//去掉www的Gravatar地址&quot; where email = &quot;your email address&quot;; 主题安装： cd ~/ghost/content/themes/ git clone [git地址] 可能需要为 git 设置默认的用户名以及邮箱，下载完主题后需删除目录下的 .git 目录以及 .gitignore，以免稍后无法应用更新。 添加多说（试用多说过程中弹出了广告）Disqus评论区以及 Swiftype 站内搜索的代码可以放置在后台Setting -&gt; Code Injection中，不必修改主题。以下是我修改过的多说脚本（请将 short_name 改为自己的）： &lt;!-- 多说公共JS代码 start (一个网页只需插入一次) --&gt;&lt;script type="text/javascript"&gt; var s = document.createElement("section"); s.className = "post-comments"; s.innerHTML = '&lt;div class="ds-thread" data-thread-key="' + location.pathname.replace(/\//g,"") + '" data-title="'+ document.title +'" data-url="' + location.href.replace(/^https/, "http") + '"&gt;&lt;/div&gt;'; document.querySelector(".post-container").parentNode.appendChild(s); var duoshuoQuery = &#123;short_name:"xxxxxxxxx"&#125;; (function() &#123; var ds = document.createElement('script'); ds.type = 'text/javascript';ds.async = true; ds.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') + '//static.duoshuo.com/embed.js'; ds.charset = 'UTF-8'; (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(ds); &#125;)();&lt;/script&gt;&lt;!-- 多说公共JS代码 end --&gt; 更新应用，在 nirtous 中做的所有更改均需通过 git 同步到 OpenShift 中，使用以下命令即可： cd ~/ghostgit add .git commit -m "[随便输入什么内容]"git push 等待更新成功提示出现：remote: Deployment completed with status: success 开始写作，通过网址http://[你的域名]/ghost初始化博客，设置管理员账号密码，然后进入后台写作以及配置 未解之谜 尝试配置七牛云存储后无法启动 Ghost -_- 尝试在 cloudflare 中使用 page rule 功能使 demojameson.com 跳转到 www.demojameson.com 失败，转而使用 wwwizer 实现该功能，两个域名均需在 cloudflare 中添加 CNAME 记录，在 OpenShift 中添加 Alias 有序列表中插入代码块会扰乱顺序，使用8 个空格的缩进又不能指定代码高亮，心好累……原来是个已知 Bug 参考资料 使用 Nitrous.IO+OpenShift 免费搭建 Ghost 博客 简单实现 Ghost 独立博客的 QQ 空间、新浪微博和人人网分享按钮 解决 Ghost 中 gravatar 被墙不能显示的问题 绑定 GoDaddy 域名到 OpenShift 应用 用 Prism 给 Ghost 添加代码高亮 Ghost 博客平台：安装多说, Disqus 使用 Swiftype 完成 Ghost 搜索功能]]></content>
    </entry>

    
  
  
</search>
